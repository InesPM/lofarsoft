/* src/config.h.in.  Generated from configure.in by autoheader.  */

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#cmakedefine CRAY_STACKSEG_END

/* Define to 1 if using `alloca.c'. */
#cmakedefine C_ALLOCA

/* Define if you want the debug output support compiled in. */
#cmakedefine ENABLE_DEBUG

/* Define if you want the HTTP Digest Authorization compiled in. */
#cmakedefine ENABLE_DIGEST

/* Define if IPv6 support is enabled. */
#cmakedefine ENABLE_IPV6

/* Define if you want the NTLM authorization support compiled in. */
#cmakedefine ENABLE_NTLM

/* Define if you want the Opie support for FTP compiled in. */
#cmakedefine ENABLE_OPIE

/* Define to 1 if you have `alloca', as a function or macro. */
#cmakedefine HAVE_ALLOCA

/* Define when using built-in MD5. */
#cmakedefine HAVE_BUILTIN_MD5

/* Define to 1 if you have the `drand48' function. */
#cmakedefine HAVE_DRAND48

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#cmakedefine HAVE_FSEEKO

/* Define to 1 if the system has the type `intptr_t'. */
#cmakedefine HAVE_INTPTR_T

/* Define if we're compiling support for MD5. */
#cmakedefine HAVE_MD5

/* Define to 1 if you have a working `mmap' system call. */
#cmakedefine HAVE_MMAP

/* Define if you have the nanosleep function. */
#cmakedefine HAVE_NANOSLEEP

/* Define this if you want the NLS support. */
#cmakedefine HAVE_NLS

/* Define when using OpenSSL MD5. */
#cmakedefine HAVE_OPENSSL_MD5

/* Define to 1 if you have the `sigsetjmp' function. */
#cmakedefine HAVE_SIGSETJMP

/* Define if struct sockaddr_in6 has the sin6_scope_id member */
#cmakedefine HAVE_SOCKADDR_IN6_SCOPE_ID

/* Define when using Solaris MD5. */
#cmakedefine HAVE_SOLARIS_MD5

/* Define to 1 if stdbool.h conforms to C99. */
#cmakedefine HAVE_STDBOOL_H

/* Define to 1 if the system has the type `struct sockaddr_in6'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_IN6

/* Define to 1 if the system has the type `struct sockaddr_storage'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE

/* Define to 1 if the system has the type `struct utimbuf'. */
#cmakedefine HAVE_STRUCT_UTIMBUF

/* Define to 1 if the system has the type `uintptr_t'. */
#cmakedefine HAVE_UINTPTR_T

/* Define if fnmatch.h can be included. */
#cmakedefine HAVE_WORKING_FNMATCH_H

/* Define to 1 if the system has the type `_Bool'. */
#cmakedefine HAVE__BOOL

/* Define to be the name of the operating system. */
#cmakedefine OS_TYPE

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION

/* The size of `void *', as computed by sizeof. */
#cmakedefine SIZEOF_VOID_P

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#cmakedefine STACK_DIRECTION

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS

/* Define to 1 if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _ALL_SOURCE
#cmakedefine _ALL_SOURCE
#endif

/* Number of bits in a file offset, on hosts where this is settable. */
#cmakedefine _FILE_OFFSET_BITS

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
#cmakedefine _LARGEFILE_SOURCE

/* Define for large files, on AIX-style hosts. */
#cmakedefine _LARGE_FILES

/* Define to empty if `const' does not conform to ANSI C. */
#cmakedefine const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#cmakedefine inline
#endif

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine pid_t

/* Define to `unsigned int' if <sys/types.h> does not define. */
#cmakedefine size_t

/* Define to int or size_t on systems without socklen_t. */
#cmakedefine socklen_t

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#cmakedefine volatile


#include <config-post.h>

