
## Name of the project
project (<PROJECT>)

## Minimum required version of CMake to configure the project
cmake_minimum_required (VERSION 2.5)

## -----------------------------------------------------------------------------
## Only force rebuild of the library from the provided source code, if no system
## installation can be found. In order to handle this properly, we use the CMake
## find script

option (<PROJECT>_FORCE_BUILD "Force rebuild and local installation?"   YES )
option (<PROJECT>_CMAKE_BUILD "Use CMake to configure and build <PROJECT>?"  YES )
option (<PROJECT>_VERBOSE_CONFIGURE "Be verbose during configuration?"  NO  )
option (<PROJECT>_VERBOSE_BUILD     "Be verbose during build process?"  NO  )

## ------------------------------------------------------------------------------
## Set CMAKE_MODULE_PATH to load custom CMake modules

find_path (USG_ROOT devel_common/cmake/CMakeSettings.cmake
  PATHS 
  ${<PROJECT>_SOURCE_DIR}
  ${<PROJECT>_SOURCE_DIR}/..
  ${<PROJECT>_SOURCE_DIR}/../..
  ${<PROJECT>_SOURCE_DIR}/../../..
  ENV LOFARSOFT
  )

if (USG_ROOT)
  include (${USG_ROOT}/devel_common/cmake/CMakeSettings.cmake)
else (USG_ROOT)
  message (FATAL_ERROR "Unable to locate additional CMake scripts!")
endif (USG_ROOT)

## ------------------------------------------------------------------------------
## Check if the program/package/library is already available



## <-- begin build condition --------------------------------------------------->

if (NOT HAVE_<PROJECT> OR <PROJECT>_FORCE_BUILD)
  
  ## ------------------------------------------------------------------------------
  ## Locate the installation area
  
  find_path (<PROJECT>_prefix release_area.txt
    PATHS
    ${<PROJECT>_SOURCE_DIR}
    PATH_SUFFIXES
    ../release
    ../../release
    ../../../release
    NO_DEFAULT_PATH
    )
  
  if (NOT <PROJECT>_prefix)
    message (FATAL_ERROR "Unable to locate the installation area")
  endif (NOT <PROJECT>_prefix)
  
  ## ------------------------------------------------------------------------------
  ## 


  ## <-- end build condition ----------------------------------------------------->
  
else (NOT HAVE_<PROJECT> OR <PROJECT>_FORCE_BUILD)
  message (STATUS "Found system-wide installation of <PROJECT>; skipping rebuild!")
endif (NOT HAVE_<PROJECT> OR <PROJECT>_FORCE_BUILD)
