/*-------------------------------------------------------------------------*
 | $Id:: templates.h 391 2007-06-13 09:25:11Z baehren                    $ |
 *-------------------------------------------------------------------------*
 ***************************************************************************
 *   Copyright (C) 2007                                                    *
 *   Lars B"ahren (bahren@astron.nl)                                       *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

// ==============================================================================
//
//  Main page of the Doxygen documentation
//
// ==============================================================================

/*!
  \mainpage LOFAR User Software

  <ul>
    <li>\ref configure_build_code
    <li>\ref configure_build_install
    <li>\ref build_targets_usg
    <li>\ref build_targets_external
    <li>\ref build_targets_doc
    <li>\ref build_targets_clean
    <li>\ref troubleshooting
  </ul>

  <hr>

  \section configure_build_code Organization of the code
	
  Once the check-out is completed, you will find the following directory structure
  on your disk:

  \verbatim
  lofarsoft
  |-- data
  |-- doc
  |-- release
  |-- build
  |-- devel_common
  |   |-- cmake
  |   |-- scripts
  |   `-- templates
  |-- external
  |   |-- cfitsio
  |   |-- casacore
  |   |-- hdf5
  |   |-- plplot
  |   |-- swig
  |   `-- wcslib
  `-- src
      |-- contrib
      |-- CR-Tools
      |-- DAL
      |-- LASA
      |-- pipeline
      |-- pybdsm
      `-- RM
   \endverbatim

   In this:

   <table border=0>
     <tr valign=top>
	<td width="15%">\b lofarsoft</td>
	<td width="80%">Root of the User Software code tree - go there if you
	want to synchronize your local working version against the repository.</td>
     </tr>
     <tr valign=top>
	<td width="15%">\b build</td>
	<td width="80%">Directory used for building individual packages in the code
	distribution; using a separate directory for this purpose makes it easy to
     	simply erase all compile and link attempts and start again from a clean
	plate.</td>
     </tr>
     <tr valign=top>
	<td width="15%">\b devel_common</td>
	<td width="80%">Directory holding common tools for development; this
	includes e.g. the find scripts for CMake or file templates for creating
	new C++ classes. Unless you consider collaborating on the framework, you
	will not need to touch this (but you will need it).</td>
     </tr>
     <tr valign=top>
	<td width="15%">\b doc</td>
	<td width="80%">Local version of the Doxygen-based source code
	documentation.</td>
     </tr>
     <tr valign=top>
	<td width="15%">\b external</td>
	<td width="80%">Hosts the various \ref build_targets_external which will
	be required to build parts of the LOFAR User Software.</td>
     </tr>
     <tr valign=top>
	<td width="15%">\b src</td>
	<td width="80%">Contains the source code of the various projects and
	packages developed and written within the framework of the USG.</td>
     </tr>
   </table>

   <hr>

   \section configure_build_install Basic installation from source

   In order to install modules/packages the following simple steps are required:
   <ol>
     <li><b>Get a working copy of the source code</b> from the USG Subversion
     repository:
     \verbatim
     svn co http://usg.lofar.org/svn/code/trunk lofarsoft
     \endverbatim
     <li><b>Set up your environment</b>: Add the location of the new
     executables to your PATH variable:
     \code
     # csh, tcsh
     setenv LOFARSOFT <root directory of code tree>
     source $LOFARSOFT/devel_common/scripts/init.csh

     # sh, bash
     export LOFARSOFT=<root directory of code tree>
     . $LOFARSOFT/devel_common/scripts/init.sh
     \endcode
     If you want this information to be persistent, you should add the setting
     to the configuration file of your shell; for \e bash users this is
     done in either <tt>$HOME/.profile</tt> or <tt>$HOME/.bashrc</tt> -- users
     of \e tcsh or \e csh need to add the appropriate statement to
     <tt>$HOME/.cshrc</tt>.
     <li>Change into the \e build directory and run the \e bootstrap script:
     \code
     cd $LOFARSOFT/build
     ./bootstrap
     \endcode
     The script will check if there is a recent enough version of CMake available
     <li>Run \e make for the package/module in question, e.g. for the
     <a href="group__DAL.html">Data Access Library</a>
     \code
     cd $LOFARSOFT/build
     make dal
     \endcode
     Typing
     \code
     make help
     \endcode
     will provide you with a list of available build targets.
   </ol>

   <hr>

   \section build_targets_usg Targets to build User Software packages

   The following targets can be used to build one (or multiple, in case of
   dependencies) of the package developed and written by the User Software
   Group:

   <table border=0>
     <tr>
	<td class="indexkey" width="15%">Target</td>
	<td class="indexkey" width="80%">Description</td>
     </tr>
     <tr valign="top">
	<td bgcolor="dddddd">\b dal</td>
     	<td bgcolor="eeeeee">The <a href="group__DAL.html">Data Access Library</a>
	(DAL).</td>
     </tr>
     <tr valign="top">
        <td bgcolor="dddddd">\b cr</td>
     	<td bgcolor="eeeeee">The <a href="group__CR.html">CR-Tools</a> package.
	The configuration script enables selection of the following features from
	the top-level directory: \e CR_WITH_GUI and \e CR_WITH_STARTOOLS - both
	of which are disabled by default. See the page \ref crtools_build_parameters
	for further description.</td>
     </tr>
     <tr valign="top">
	<td bgcolor="dddddd">\b lasa</td>
     	<td bgcolor="eeeeee">The <a href="group___l_a_s_a.html">LOFAR Air Shower
	Array</a> (LASA).</td>
     </tr>
     <tr valign="top">
       <td bgcolor="dddddd">\b pybdsm</td>
       <td bgcolor="eeeeee">Python version of the <i>Blob detection and source
       modelling</i> package developed by the Surveys KSP.</td>
     </tr>
     <tr valign="top">
	<td bgcolor="dddddd">\b rm</td>
     	<td bgcolor="eeeeee">Rotation-measure synthesis imaging package developed
	by the Cosmic Magnetism KSP.</td>
     </tr>
   </table>

   <hr>

   \section build_targets_external External packages

   <table border=0>
     <tr>
	<td class="indexkey" width="15%">Target</td>
	<td class="indexkey" width="80%">Description</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b armadillo</td>
       <td>C++ linear algebra library</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b bison</td>
       <td>GNU Project parser generator (yacc replacement)</td>
     </tr>
     <tr bgcolor="eeeeee">
     	 <td bgcolor="dddddd">\b blitz</td>
     	 <td></td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b boost</td>
       <td>A free peer-reviewed portable C++ source libraries. Amongst many
       other things it contains \e Boost.Python, a C++ library which enables
       seamless interoperability between C++ and the Python programming
       language.</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b casacore</td>
       <td></td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b cfitsio</td>
       <td></td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b flex</td>
       <td>Fast lexical analyzer generator</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b hdf5</td>
       <td></td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b mathgl</td>
       <td>Library for the generation of scientific plots</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b plplot</td>
       <td>Library for the generation of scientific plots</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b pyrap</td>
       <td>Python bindings for casacore</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b qt</td>
       <td>A cross-platform application and UI framework</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b root</td>
       <td>A set of OO frameworks with all the functionality needed to handle
       and analyze large amounts of data in a very efficient way.</td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b sip</td>
       <td></td>
     </tr>
     <tr bgcolor="eeeeee">
       <td bgcolor="dddddd">\b </td>
       <td></td>
     </tr>

	  <tr bgcolor="eeeeee">
	    <td bgcolor="dddddd">\b startools</td>
	    <td></td>
	  </tr>
	  <tr bgcolor="eeeeee">
	    <td bgcolor="dddddd">\b szip</td>
	    <td></td>
	  </tr>
	  <tr bgcolor="eeeeee">
	    <td bgcolor="dddddd">\b swig</td>
	    <td></td>
	  </tr>
	  <tr bgcolor="eeeeee">
	    <td bgcolor="dddddd">\b wcslib</td>
	    <td>Library implementing the WCS standard, central to a number of
		astronomical data reduction packages.</td>
	  </tr>
	  <tr bgcolor="eeeeee">
	    <td bgcolor="dddddd">\b wcstools</td>
	    <td></td>
	  </tr>
	  <tr bgcolor="eeeeee">
	    <td bgcolor="dddddd">\b wget</td>
	    <td>[optional] Non-interactive network downloader. GNU Wget is a
	free utility for non-interactive download of files from the Web. It supports
	HTTP, HTTPS, and FTP protocols, as well as retrieval through HTTP proxies.</td>
	  </tr>
	  <tr bgcolor="eeeeee">
	    <td bgcolor="dddddd">\b zlib</td>
	    <td>Compression/decompression library.</td>
	  </tr>
	</table>
	
	\b Note: Some of the above listed targets may not be present in your setup;
	if this is the case, then the related system package is installed already.

   <hr>

   \section build_targets_doc Targets for generation of documentation

   <table border=0>
     <tr>
	<td class="indexkey" width="15%">Target</td>
	<td class="indexkey" width="80%">Description</td>
     </tr>
     <tr bgcolor="eeeeee" valign="top">
       <td bgcolor="dddddd">\b doc</td>
       <td>Extract source code documentation using Doxygen (the pages you are
       looking at right now), generate documentation for CMake and CTest.</td>
     </tr>
   </table>

   <hr>

   \section build_targets_clean Targets for cleaning up directories

   <table border=0>
     <tr>
	<td class="indexkey" width="15%">Target</td>
	<td class="indexkey" width="80%">Description</td>
     </tr>
     <tr bgcolor="eeeeee" valign="top">
       <td bgcolor="dddddd">\b clean</td>
       <td></td>
     </tr>
     <tr bgcolor="eeeeee" valign="top">
       <td bgcolor="dddddd">\b clean-build</td>
       <td>Clean up the build directory; this will remove everything except the
       original files obatined with a fresh check-out (which of course means
       you will need to again run <tt>./bootstrap</tt> before any further
       action).</td>
     </tr>
     <tr bgcolor="eeeeee" valign="top">
       <td bgcolor="dddddd">\b clean-doc</td>
       <td>Clean up the documentation directory; this will remove all the
       created HTML files and images created by Doxygen.</td>
     </tr>
     <tr bgcolor="eeeeee" valign="top">
       <td bgcolor="dddddd">\b clean-release</td>
       <td>Clean up the \e release directory and put it back into the state it
       was right after check-out of your working copy. \b Caution: If your
       version of CMake is taken from \e release/bin you will need to again
       run <tt>./bootstrap</tt>.</td>
     </tr>
   </table>

*/

