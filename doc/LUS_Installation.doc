
/*!

  \page LUS_Installation LUS :: Installation instructions

  <ul>
    <li>\ref LUS_Installation_General</li>
    <li>\ref LUS_Installation_Platforms</li>
    <ul>
      <li>\ref LUS_Installation_Debian</li>
      <li>\ref LUS_Installation_Haiku</li>
      <li>\ref LUS_Installation_OSX</li>
      <li>\ref LUS_Installation_SL</li>
      <li>\ref LUS_Installation_Ubuntu</li>
    </ul>
  </ul>

  <p><hr><p>

  \section LUS_Installation_General General installation procedure

  In order to install modules/packages the following simple steps are required:
  <ol>
    <li><b>Get a working copy of the source code</b> from the USG Subversion
    repository. The exact procedure depends on which version control system you
    are working with locally:
    <ul>
      <li>\b Subversion
      \verbatim
      svn co http://usg.lofar.org/svn/code/trunk lofarsoft
      \endverbatim
      <li>\b Git
      \verbatim
      git svn clone http://usg.lofar.org/svn/code/trunk lofarsoft
      \endverbatim
    </ul>
    <li><b>Set up your environment</b>: Add the location of the new
    executables to your PATH variable:
    \code
    # csh, tcsh
    setenv LOFARSOFT <root directory of code tree>
    source $LOFARSOFT/devel_common/scripts/init.csh
    # sh, bash
    export LOFARSOFT=<root directory of code tree>
    . $LOFARSOFT/devel_common/scripts/init.sh
    \endcode
    If you want this information to be persistent, you should add the setting
    to the configuration file of your shell; for \e bash users this is
    done in either <tt>$HOME/.profile</tt> or <tt>$HOME/.bashrc</tt> -- users
    of \e tcsh or \e csh need to add the appropriate statement to
    <tt>$HOME/.cshrc</tt>.
    <li>Change into the \e build directory and run the \e bootstrap script:
    \code
    cd $LOFARSOFT/build
    ./bootstrap
    \endcode
    The script will check if there is a recent enough version of CMake available
    <li>Run \e make for the package/module in question, e.g. for the
    <a href="group___d_a_l.html">Data Access Library</a>
    \code
    cd $LOFARSOFT/build
    make dal
    \endcode
    Typing
    \code
    make help
    \endcode
    will provide you with a list of available build targets.
   </ol>

  <p><hr><p>

  \section LUS_Installation_Platforms Platform-specific installation

  \section LUS_Installation_Debian Debian GNU/Linux

  A base install of Debian does not provide all the required development
  packages. They can be installed using <tt>apt-get</tt> as follows:

  \verbatim
  apt-get install bison flex
  apt-get install g++ gfortran liblapack-dev python-dev
  apt-get install git-svn make doxygen
  \endverbatim

  \section LUS_Installation_Haiku Haiku

  Not yet tested.

  \section LUS_Installation_OSX Mac OS X

  First install the GNU C/C++ compiler optimized for OSX provided by
  <a hef="http://www.apple.com">Apple</a> as part of the X Code Integrated
  Development Environment.

  You can either use the OSX Installation DVD which came with your Mac or
  <a href="http://developer.apple.com/technologies/xcode.html">download</a>
  it from the Apple website.

  Double click the package and follow the installation instructions.
  Then run <i>Software Update</i> from the Apple menu to ensure you have the
  latest version of all libraries.

  \section LUS_Installation_SL Scientific Linux

  Recently started testing installation on SL 5.5

  \section LUS_Installation_Ubuntu Ubuntu

  The list of additional packages which need to be installed, is pretty much
  the same as for \ref LUS_Installation_Debian (which should should not come
  too much as a surprise)
  \verbatim
  apt-get install bison flex
  apt-get install g++ gfortran liblapack-dev python-dev
  apt-get install git-svn make doxygen
  \endverbatim
*/
