.TH "/home/vilchez/Bureau/dynspec/src/ICD3-ICD6-Complete/DynspecAll.cpp" 3 "Thu Jan 10 2013" "LOFAR-ICD3 Convertor without any  selection and rebinning" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/vilchez/Bureau/dynspec/src/ICD3-ICD6-Complete/DynspecAll.cpp \- 
.PP
Main program for converting ICD3 files to ICD6 (dynamic spectrum) files without any time-frequency selection and rebinning (Complete convertion)  

.SH SYNOPSIS
.br
.PP
\fC#include <iostream>\fP
.br
\fC#include <string>\fP
.br
\fC#include <fstream>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include 'Reader_Root\&.h'\fP
.br
\fC#include 'Stock_Write_Root_Metadata\&.h'\fP
.br
\fC#include 'Reader_Dynspec\&.h'\fP
.br
\fC#include 'Stock_Write_Dynspec_Metadata\&.h'\fP
.br
\fC#include 'Stock_Write_Dynspec_Data\&.h'\fP
.br
\fC#include <dal/lofar/BF_File\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBis_readableTer\fP (const std::string &file)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SH "Detailed Description"
.PP 
Main program for converting ICD3 files to ICD6 (dynamic spectrum) files without any time-frequency selection and rebinning (Complete convertion) 

Projet LOFAR
.PP
\fBDate:\fP
.RS 4
17/12/2012 
.RE
.PP
\fBAuthor:\fP
.RS 4
Nicolas VILCHEZ 
.RE
.PP
\fBVersion:\fP
.RS 4
1\&.0 
.RE
.PP
\fBCopyright:\fP
.RS 4
LPC2E/CNRS Station de radio-astronomie de NanÃ§ay 
.RE
.PP
\fBSee also:\fP
.RS 4
DAL Library 2\&.5 (library for hdf5 file)
.RE
.PP

.br
Algorithm overview: This code (pipeline) uses several classes\&. Each classes has a particular role for processing ICD3 data to dynamic spectrum data (ICD6) The main code etablishes principal parameters of the observation (number of SAP, Beam and Stokes parameters\&. Thanks to robustess nomenclature of ICD3 format, with these parameters, we are able to know which file we have to process for a given SAP, Beam and Stokes parameter) After existency tests and principal parameters determination, the main code will loop of the SAPs that it has to process:
.PP
First, the code wil stock Root group metadata\&. Root Metadata are red by a function named readRoot and contained in the class \fBReader_Root\&.h\fP, the Root group is generated and Root's metadata are stocked, then written by a function named writeRootMetadata and contained in the class \fBStock_Write_Root_Metadata\&.h\fP
.PP
Secondly, the main code will loop on Beam, and generate dynamic spectrum group and its metadata\&. The dynamic spectrum's metadata are red by a function named readDynspec and contained in the class \fBReader_Dynspec\&.h\fP, after, metadata are stoked, then written by a function named writeDynspecMetadata contained in Stock_Write_Dynspec_Metadata_Part\&.h
.PP
Finaly, data are processed\&. Because LOFAR data are very voluminous, we have to develop a strategy for: 
.br
 - avoid swaping 
.br
 - have enough memory for loading data 
.br
 etc \&.\&.\&. We decide to use a frozen quantity of RAM for a processing\&. This quantity is chosen by the user and corresponds to a number of time bins that we can process for this RAM\&. So, the code will loop of the number of Time series we need to process all data\&. no rebinning is done inside these blocks (see ICD3-ICD6-Rebin module)\&. To conclude, data processing is done time blocks by time blocks, and data generation is done by the function writeDynspecData which is included in the class \fBStock_Write_Dynspec_Data\&.h\fP All data contained in ICD3 observation are processed 
.SH "Function Documentation"
.PP 
.SS "bool \fBis_readableTer\fP (const std::string &file)"\fBParameters:\fP
.RS 4
\fIfile\fP 
.br
Check if file is readable, so if file exists ! 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean value 
.RE
.PP

.SS "int \fBmain\fP (intargc, char *argv[])"
.br
Usage: Dynspec Observation-Path-DIR Observation-Number(ex:Lxxxxx) Output-hdf5-DIR [Facultative:Dataset-RAM-allocation (in Go; default value: 1Go)]
.PP
\fBParameters:\fP
.RS 4
\fIargc\fP Number of arguments 
.br
\fIargv\fP Table of arguments(see above c\&.f Usage)
.RE
.PP

.br
\fBSee also:\fP
.RS 4
Variables: 
.br
pathDir Observation (ICD3) directory 
.br
obsName Observation ID 
.br
SAPNumber Number of SAP to process 
.br
memoryRAM RAM Memory allocation for processing 
.br
Test Existing files allow to determinine \fBmain\fP observation parameter: 
.br
obsNofSAP Number of SAP contained in the observation directory 
.br
obsNofBeam Number of BEAM (i\&.e signals from a station or a correlated sum) in the observation directory 
.br
obsNofStockes Number of Stokes paramters contained in the observation directory 
.br
stokesComponent Vector of Stokes parameter 
.br
We have 2 kinds of observation: using or not Pxxx nomenclature 
.br
rebinAllDynspec Flag which allow to process only one selected SAP or All 
.br
methodFlag Flag which allow to know if Pxxxnomenclatureis used 
.br
outputFile Output file for One SAP contains all dynamic spectrum
.RE
.PP

.br
\fBSee also:\fP
.RS 4
2 modes (depends with nomenclature): 
.br
 
.br
 FIRST MODE: 
.br
Loop on SAPs 
.br
Root group generation => generation of the output file (*\&.h5) and its metadata 
.br
Loop on BEAMs 
.br
generation of a dynamic spectrum in the Root group and its metadata 
.br
Data processing for this dynamic spectrum 
.br
 
.br
 SECOND MODE: 
.br
(if Pxxx nomenclature is used:) Loop on SAPs 
.br
(if Pxxx nomenclature is used:) Loop on BEAMs 
.br
(if Pxxx nomenclature is used) Loop on differents Parts of the dynamic spectrum 
.br
(if Pxxx nomenclature is used) generation of a dynamic spectrum in the Root group and its metadata, One dynamic spectrum for each Part 
.br
(if Pxxx nomenclature is used) Data processing for this dynamic spectrum
.RE
.PP

.br
\fBReturns:\fP
.RS 4
ICD6files 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for LOFAR-ICD3 Convertor without any selection and rebinning from the source code\&.
