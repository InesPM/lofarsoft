<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="_reader___dynspec_8cpp" kind="file">
    <compoundname>Reader_Dynspec.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">fstream</includes>
    <includes refid="_reader___dynspec_8h" local="yes">Reader_Dynspec.h</includes>
    <includes refid="_stock___write___dynspec___metadata_8h" local="yes">Stock_Write_Dynspec_Metadata.h</includes>
    <includes refid="_stock___write___dynspec___data_8h" local="yes">Stock_Write_Dynspec_Data.h</includes>
    <includes local="no">dal/lofar/BF_File.h</includes>
    <incdepgraph>
      <node id="124">
        <label>Stock_Write_Dynspec_Metadata.h</label>
        <link refid="_stock___write___dynspec___metadata_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>string</label>
      </node>
      <node id="121">
        <label>fstream</label>
      </node>
      <node id="118">
        <label>/home/vilchez/Bureau/dynspec/src/ICD3-ICD6-Complete/Reader_Dynspec.cpp</label>
        <link refid="Reader_Dynspec.cpp"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>vector</label>
      </node>
      <node id="123">
        <label>dal/lofar/BF_File.h</label>
      </node>
      <node id="119">
        <label>iostream</label>
      </node>
      <node id="122">
        <label>Reader_Dynspec.h</label>
        <link refid="_reader___dynspec_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>Stock_Write_Dynspec_Data.h</label>
        <link refid="_stock___write___dynspec___data_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_reader___dynspec_8cpp_1a279ccd4541950f7bb6fde5a04a786dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_readableBis</definition>
        <argsstring>(const std::string &amp;file)</argsstring>
        <name>is_readableBis</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
Check if file is readable, so if file exists ! </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean value </para></simplesect>
</para>        </inbodydescription>
        <location file="/home/vilchez/Bureau/dynspec/src/ICD3-ICD6-Complete/Reader_Dynspec.cpp" line="31" bodyfile="/home/vilchez/Bureau/dynspec/src/ICD3-ICD6-Complete/Reader_Dynspec.cpp" bodystart="30" bodyend="39"/>
        <referencedby refid="class_reader___dynspec_1ad700712653c8c6b4e5b7f3782dc0954e" compoundref="_reader___dynspec_8cpp" startline="42" endline="370">Reader_Dynspec::readDynspec</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>File C++ (associated to <ref refid="_reader___dynspec_8h" kindref="compound">Reader_Dynspec.h</ref>)for read ICD3 files and put in variables metadatas for the ICD6&apos;s Dynspec Group. </para>    </briefdescription>
    <detaileddescription>
<para><linebreak/>
 Overview: <linebreak/>
 This function readDynspec is described (programmed) here. It needs as parameter a <ref refid="class_stock___write___dynspec___metadata" kindref="compound">Stock_Write_Dynspec_Metadata</ref> object. The readDynspec function will read dynspec metadatas and stock them in the <ref refid="class_stock___write___dynspec___metadata" kindref="compound">Stock_Write_Dynspec_Metadata</ref> object as private attributes thanks to stockDynspecMetadata function. These attributes will be written in the next step by writeDynspecMetadata function which is in the class <ref refid="_stock___write___dynspec___metadata_8h" kindref="compound">Stock_Write_Dynspec_Metadata.h</ref> and called at the end of this <ref refid="_reader___dynspec_8cpp" kindref="compound">Reader_Dynspec.cpp</ref> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_reader___dynspec_8h" kindref="compound">Reader_Dynspec.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_stock___write___dynspec___metadata_8h" kindref="compound">Stock_Write_Dynspec_Metadata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_stock___write___dynspec___data_8h" kindref="compound">Stock_Write_Dynspec_Data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dal/lofar/BF_File.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">dal;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_reader___dynspec_1ad8435bcbf814ad1aefcedc316a233b1a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_reader___dynspec_1ad8435bcbf814ad1aefcedc316a233b1a" kindref="member">Reader_Dynspec::Reader_Dynspec</ref>(){}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_reader___dynspec_1a091944d9333e9bcfde574e5db2ff167e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_reader___dynspec_1a091944d9333e9bcfde574e5db2ff167e" kindref="member">Reader_Dynspec::~Reader_Dynspec</ref>(){}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="30" refid="_reader___dynspec_8cpp_1a279ccd4541950f7bb6fde5a04a786dd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_reader___dynspec_8cpp_1a279ccd4541950f7bb6fde5a04a786dd9" kindref="member">is_readableBis</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>file<sp/>)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>fichier(<sp/>file.c_str()<sp/>);<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!fichier.fail();<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="class_reader___dynspec_1ad700712653c8c6b4e5b7f3782dc0954e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_reader___dynspec_1ad700712653c8c6b4e5b7f3782dc0954e" kindref="member">Reader_Dynspec::readDynspec</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pathFile,<ref refid="class_stock___write___dynspec___metadata" kindref="compound" tooltip="Class object for stock and write metadatas for the ICD6&amp;#39;s Dynspec Groups (loop on Beams ...">Stock_Write_Dynspec_Metadata</ref><sp/>*dynspecMetadata,<ref refid="class_stock___write___dynspec___data" kindref="compound" tooltip="Class object for stocking data parameters and write datas for the ICD6&amp;#39;s Dynspec Group.">Stock_Write_Dynspec_Data</ref><sp/>*dynspecData,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obsNofSAP,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obsNofSource,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obsNofFrequencyBand,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obsNofStockes,vector&lt;string&gt;<sp/>stokesComponent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SAPindex)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="61"></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>index_i1,index_j1,index_q1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss_i;oss_i<sp/>&lt;&lt;<sp/>i;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>index_i(oss_i.str());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&lt;10){index_i1=</highlight><highlight class="stringliteral">&quot;_SAP00&quot;</highlight><highlight class="normal">+index_i;}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=10<sp/>&amp;&amp;<sp/>i&lt;100){index_i1=</highlight><highlight class="stringliteral">&quot;_SAP0&quot;</highlight><highlight class="normal">+index_i;}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=100<sp/>&amp;&amp;<sp/>i&lt;1000){index_i1=</highlight><highlight class="stringliteral">&quot;_SAP&quot;</highlight><highlight class="normal">+index_i;}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss_j;oss_j<sp/>&lt;&lt;<sp/>j;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>index_j(oss_j.str());<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j&lt;10){index_j1=</highlight><highlight class="stringliteral">&quot;_B00&quot;</highlight><highlight class="normal">+index_j;}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j&gt;=10<sp/>&amp;&amp;<sp/>j&lt;100){index_j1=</highlight><highlight class="stringliteral">&quot;_B0&quot;</highlight><highlight class="normal">+index_j;}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j&gt;=100<sp/>&amp;&amp;<sp/>j&lt;1000){index_j1=</highlight><highlight class="stringliteral">&quot;_B&quot;</highlight><highlight class="normal">+index_j;}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss_q;oss_q<sp/>&lt;&lt;<sp/>q;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>index_q(oss_q.str());<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q&lt;10){index_q1=</highlight><highlight class="stringliteral">&quot;_P00&quot;</highlight><highlight class="normal">+index_q;}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q&gt;=10<sp/>&amp;&amp;<sp/>q&lt;100){index_q1=</highlight><highlight class="stringliteral">&quot;_P0&quot;</highlight><highlight class="normal">+index_q;}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q&gt;=100<sp/>&amp;&amp;<sp/>q&lt;1000){index_q1=</highlight><highlight class="stringliteral">&quot;_P&quot;</highlight><highlight class="normal">+index_q;}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Programm<sp/><sp/>Load<sp/>the<sp/>hdf5&apos;s<sp/>root<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noEmptyStokes(0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pathFile0<sp/>=<sp/>pathFile;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathFile<sp/><sp/>=<sp/>pathFile0+index_i1+index_j1+</highlight><highlight class="stringliteral">&quot;_S0&quot;</highlight><highlight class="normal">+index_q1+</highlight><highlight class="stringliteral">&quot;_bf.h5&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_reader___dynspec_8cpp_1a279ccd4541950f7bb6fde5a04a786dd9" kindref="member">is_readableBis</ref>(pathFile))<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{noEmptyStokes<sp/>=0;}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pathFile=<sp/>pathFile0+index_i1+index_j1+</highlight><highlight class="stringliteral">&quot;_S1&quot;</highlight><highlight class="normal">+index_q1+</highlight><highlight class="stringliteral">&quot;_bf.h5&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_reader___dynspec_8cpp_1a279ccd4541950f7bb6fde5a04a786dd9" kindref="member">is_readableBis</ref>(pathFile))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{noEmptyStokes<sp/>=1;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pathFile=<sp/>pathFile0+index_i1+index_j1+</highlight><highlight class="stringliteral">&quot;_S2&quot;</highlight><highlight class="normal">+index_q1+</highlight><highlight class="stringliteral">&quot;_bf.h5&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_reader___dynspec_8cpp_1a279ccd4541950f7bb6fde5a04a786dd9" kindref="member">is_readableBis</ref>(pathFile))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{noEmptyStokes<sp/>=2;}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pathFile=<sp/>pathFile0+index_i1+index_j1+</highlight><highlight class="stringliteral">&quot;_S3&quot;</highlight><highlight class="normal">+index_q1+</highlight><highlight class="stringliteral">&quot;_bf.h5&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_reader___dynspec_8cpp_1a279ccd4541950f7bb6fde5a04a786dd9" kindref="member">is_readableBis</ref>(pathFile))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{noEmptyStokes<sp/>=3;}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{noEmptyStokes<sp/>=4;}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noEmptyStokes<sp/>&lt;<sp/>4)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>checking<sp/>Empty<sp/>Dynspec<sp/>!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathFile<sp/><sp/>=<sp/>pathFile+index_i1+index_j1+</highlight><highlight class="stringliteral">&quot;_S0&quot;</highlight><highlight class="normal">+index_q1+</highlight><highlight class="stringliteral">&quot;_bf.h5&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BF_File<sp/>file(pathFile);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>an<sp/>object<sp/>called<sp/>file<sp/>contains<sp/>Root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BF_SubArrayPointing<sp/>SAP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>file.subArrayPointing(i);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>an<sp/>object<sp/>called<sp/>SAP<sp/>contains<sp/>subarray<sp/>pointings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BF_BeamGroup<sp/>BEAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SAP.beam(j);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>an<sp/>object<sp/>called<sp/>BEAM<sp/>contains<sp/>Beams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CoordinatesGroup<sp/>COORDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>BEAM.coordinates();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>an<sp/>object<sp/>called<sp/>COORDS<sp/>contains<sp/>Coodinates<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Coordinate<sp/>*TIME_COORDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>COORDS.coordinate(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>an<sp/>object<sp/>called<sp/>TIME_COORDS<sp/>contains<sp/>time<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Coordinate<sp/>*SPECTRAL_COORDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>COORDS.coordinate(1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>an<sp/>object<sp/>called<sp/>SPECTRAL_COORDS<sp/>contains<sp/>spectral<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NumericalCoordinate<sp/>*NUM_COORD_TIME<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">NumericalCoordinate*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(TIME_COORDS);<sp/></highlight><highlight class="comment">//<sp/>load<sp/>Numerical<sp/>coordinates<sp/>lib<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DirectionCoordinate<sp/>*DIR_COORD_TIME<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">DirectionCoordinate*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(TIME_COORDS);<sp/></highlight><highlight class="comment">//<sp/>load<sp/>Direction<sp/>coordinates<sp/>lib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NumericalCoordinate<sp/>*NUM_COORD_SPECTRAL<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">NumericalCoordinate*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(SPECTRAL_COORDS);<sp/></highlight><highlight class="comment">//<sp/>load<sp/>Numerical<sp/>coordinates<sp/>lib<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DirectionCoordinate<sp/>*DIR_COORD_SPECTRAL<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">DirectionCoordinate*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(SPECTRAL_COORDS);<sp/></highlight><highlight class="comment">//<sp/>load<sp/>Direction<sp/>coordinates<sp/>lib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redefine<sp/>ObsnofStokes<sp/>and<sp/>vector<sp/>for<sp/>special<sp/>case<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obsNofStockes<sp/>=<sp/>BEAM.observationNofStokes().get();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obsNofStockes<sp/>==<sp/>1){stokesComponent.resize(1);stokesComponent[0]=</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obsNofStockes<sp/>==<sp/>2){stokesComponent.resize(2);stokesComponent[0]=</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">;stokesComponent[1]=</highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obsNofStockes<sp/>==<sp/>3){stokesComponent.resize(3);stokesComponent[0]=</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">;stokesComponent[1]=</highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">;stokesComponent[2]=</highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obsNofStockes<sp/>==<sp/>4){stokesComponent.resize(4);stokesComponent[0]=</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">;stokesComponent[1]=</highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">;stokesComponent[2]=</highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">;stokesComponent[3]=</highlight><highlight class="charliteral">&apos;V&apos;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Variable<sp/>iniatialization<sp/>for<sp/>DYNSPEC<sp/>group<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>GROUPE_TYPE_DYN(</highlight><highlight class="stringliteral">&quot;DYNSPEC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>file.expTimeStartMJD().get())<sp/>return<sp/>a<sp/>double<sp/>value,<sp/>so<sp/>it<sp/>needs<sp/>to<sp/>convert<sp/>float<sp/>to<sp/>string<sp/>using<sp/>a<sp/>ostringstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;oss<sp/>&lt;&lt;<sp/>file.observationStartMJD().get();</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>DYNSPEC_START_MJD(oss.str());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>file.observationEndMJD().get();</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>DYNSPEC_STOP_MJD(oss.str());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>DYNSPEC_START_UTC(file.observationStartUTC().get());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>DYNSPEC_STOP_UTC(file.observationEndUTC().get());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TARGET_DYN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>TRACKING(BEAM.tracking().get());<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>TARGETS_DYN(file.targets().get());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>TARGET_DYN(TARGETS_DYN[SAPindex]);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ONOFF;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TRACKING<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;J2000&quot;</highlight><highlight class="normal">){ONOFF<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ON&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TRACKING<sp/>==</highlight><highlight class="stringliteral">&quot;LMN&quot;</highlight><highlight class="normal">){ONOFF<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OFF_0&quot;</highlight><highlight class="normal">;}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TRACKING<sp/>==</highlight><highlight class="stringliteral">&quot;TBD&quot;</highlight><highlight class="normal">){ONOFF<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OFF_1&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>POINT_RA(BEAM.pointRA().get());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>POINT_DEC(BEAM.pointDEC().get());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>POSITION_OFFSET_RA(BEAM.pointOffsetRA().get());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>POSITION_OFFSET_DEC(BEAM.pointOffsetDEC().get());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BEAM_DIAMETER(0);<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BEAM_DIAMETER_RA(BEAM.beamDiameterRA().get());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BEAM_DIAMETER_DEC(BEAM.beamDiameterDEC().get());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BEAM_NOF_STATIONS(BEAM.nofStations().get());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>BEAM_STATIONS_LIST(BEAM.stationsList().get());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>DEDISPERSION(BEAM.dedispersion().get());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DISPERSION_MEASURE(BEAM.dispersionMeasure().get());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>DISPERSION_MEASURE_UNIT(BEAM.dispersionMeasureUnit().get());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BARYCENTER(BEAM.barycentered().get());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>STOCKES_COMPONENT(stokesComponent);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>COMPLEX_VOLTAGE(BEAM.complexVoltage().get());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>SIGNAL_SUM(BEAM.signalSum().get());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Variable<sp/>iniatialization<sp/>for<sp/>COORDINATES<sp/>group<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>GROUPE_TYPE_COORD(</highlight><highlight class="stringliteral">&quot;Coordinates&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>REF_LOCATION_VALUE(COORDS.refLocationValue().get());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>REF_LOCATION_UNIT(COORDS.refLocationUnit().get());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>REF_LOCATION_FRAME(COORDS.refLocationFrame().get());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>REF_TIME_VALUE(COORDS.refTimeValue().get());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>REF_TIME_UNIT(COORDS.refTimeUnit().get());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>REF_TIME_FRAME(COORDS.refTimeFrame().get());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>NOF_COORDINATES(3);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>NOF_AXIS(3);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>COORDINATE_TYPES(3);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>COORDINATE_TYPES[0]=</highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>COORDINATE_TYPES[1]=</highlight><highlight class="stringliteral">&quot;Spectral&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>COORDINATE_TYPES[2]=</highlight><highlight class="stringliteral">&quot;Polarisation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Variable<sp/>iniatialization<sp/>for<sp/>TIME<sp/>coordinate<sp/><sp/>group<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>GROUPE_TYPE_TIME(</highlight><highlight class="stringliteral">&quot;TimeCoord&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>COORDINATE_TYPE_TIME(</highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>STORAGE_TYPE_TIME(1);<sp/>STORAGE_TYPE_TIME[0]=</highlight><highlight class="stringliteral">&quot;Linear&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NOF_AXES_TIME(TIME_COORDS-&gt;nofAxes().get());<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>AXIS_NAMES_TIME(TIME_COORDS-&gt;axisNames().get());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>AXIS_UNIT_TIME(1);AXIS_UNIT_TIME[0]=</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>REFERENCE_VALUE_TIME(1);REFERENCE_VALUE_TIME[0]=(NUM_COORD_TIME-&gt;referenceValue().get());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>REFERENCE_PIXEL_TIME(1);REFERENCE_PIXEL_TIME[0]=(NUM_COORD_TIME-&gt;referencePixel().get());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>INCREMENT_TIME(1);INCREMENT_TIME[0]=(1/(BEAM.nofSamples().get()/file.totalIntegrationTime().get()));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>INCREMENT_TIME(1);INCREMENT_TIME[0]=(NUM_COORD_TIME-&gt;increment().get());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>PC_TIME(2);PC_TIME[0]=1;PC_TIME[1]=0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ntime=(BEAM.nofSamples().get());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>AXIS_VALUE_PIXEL_TIME(Ntime);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>AXIS_VALUE_WORLD_TIME(Ntime);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>timeBinStep((file.totalIntegrationTime().get())/(STOCKES.nofSamples().get()));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>sizeLimit(100E6);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Ntime&gt;<sp/>sizeLimit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>p(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>frac((Ntime/sizeLimit)+1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>lastElements((Ntime)-((frac-1)*sizeLimit));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(p=0;p&lt;frac;p++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(p!=frac-1){for<sp/>(int<sp/>i=0;<sp/>i&lt;sizeLimit;i++){AXIS_VALUE_PIXEL_TIME[p*sizeLimit+i]=p*sizeLimit+i;AXIS_VALUE_WORLD_TIME[p*sizeLimit+i]=<sp/>timeBinStep*(p*sizeLimit+i);}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else{for<sp/>(int<sp/>i=0;<sp/>i&lt;lastElements;i++){AXIS_VALUE_PIXEL_TIME[p*sizeLimit+i]=p*sizeLimit+i;AXIS_VALUE_WORLD_TIME[p*sizeLimit+i]=<sp/>timeBinStep*(p*sizeLimit+i);}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{for<sp/>(int<sp/>i=0;<sp/>i&lt;Ntime;i++){AXIS_VALUE_PIXEL_TIME[i]=i;AXIS_VALUE_WORLD_TIME[i]=<sp/>timeBinStep*i;}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Variable<sp/>iniatialization<sp/>for<sp/>SPECTRAL<sp/>coordinate<sp/><sp/>group<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SEE<sp/>AT<sp/>THE<sp/>BEGINNING<sp/>OF<sp/>DYNSPEC<sp/>PART<sp/>(line<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>GROUPE_TYPE_SPECTRAL(</highlight><highlight class="stringliteral">&quot;SpectralCoord&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>COORDINATE_TYPE_SPECTRAL(</highlight><highlight class="stringliteral">&quot;Spectral&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>STORAGE_TYPE_SPECTRAL(SPECTRAL_COORDS-&gt;storageType().get());<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NOF_AXES_SPECTRAL(SPECTRAL_COORDS-&gt;nofAxes().get());<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>AXIS_NAMES_SPECTRAL(SPECTRAL_COORDS-&gt;axisNames().get());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>AXIS_UNIT_SPECTRAL(1);AXIS_UNIT_SPECTRAL[0]=</highlight><highlight class="stringliteral">&quot;Mhz&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>REFERENCE_VALUE_SPECTRAL(1);REFERENCE_VALUE_SPECTRAL[0]=0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>REFERENCE_PIXEL_SPECTRAL(1);REFERENCE_PIXEL_SPECTRAL[0]=0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>INCREMENT_SPECTRAL(1);INCREMENT_SPECTRAL[0]=0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>PC_SPECTRAL(2);PC_SPECTRAL[0]=1;PC_SPECTRAL[1]=0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>AXIS_VALUE_WORLD_SPECTRAL(NUM_COORD_SPECTRAL-&gt;axisValuesWorld().get());<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nspectral=AXIS_VALUE_WORLD_SPECTRAL.size();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>AXIS_VALUE_PIXEL_SPECTRAL(Nspectral);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;Nspectral;i++){AXIS_VALUE_PIXEL_SPECTRAL[i]=i;AXIS_VALUE_WORLD_SPECTRAL[i]=AXIS_VALUE_WORLD_SPECTRAL[i];}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>sizeLimit(100E6);<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Nspectral&gt;<sp/>sizeLimit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>p(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>frac((Nspectral/sizeLimit)+1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>lastElements((Nspectral)-((frac-1)*sizeLimit));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(p=0;p&lt;frac;p++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(p!=frac-1){for<sp/>(int<sp/>i=0;<sp/>i&lt;sizeLimit;i++){AXIS_VALUE_PIXEL_SPECTRAL[p*sizeLimit+i]=p*sizeLimit+i;}}//AXIS_VALUE_WORLD_SPECTRAL[p*sizeLimit+i]=<sp/>AXIS_VALUE_WORLD_SPECTRAL[p*sizeLimit+i]/1E6;}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else{for<sp/>(int<sp/>i=0;<sp/>i&lt;lastElements;i++){AXIS_VALUE_PIXEL_SPECTRAL[p*sizeLimit+i]=p*sizeLimit+i;}}//AXIS_VALUE_WORLD_SPECTRAL[p*sizeLimit+i]=<sp/>AXIS_VALUE_WORLD_SPECTRAL[p*sizeLimit+i]/1E6;}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{for<sp/>(int<sp/>i=0;<sp/>i&lt;Nspectral;i++){AXIS_VALUE_PIXEL_SPECTRAL[i]=i;}}<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FREQUENCY<sp/>INFO<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NOF_SUBBANDS=Nspectral/(BEAM.channelsPerSubband().get());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SUBBAND_WIDTH((BEAM.subbandWidth().get())/1E6);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BEAM_FREQUENCY_CENTER(BEAM.beamFrequencyCenter().get());<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BEAM_FREQUENCY_MAX((AXIS_VALUE_WORLD_SPECTRAL[(AXIS_VALUE_WORLD_SPECTRAL.size())-1])/1E6);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BEAM_FREQUENCY_MIN((AXIS_VALUE_WORLD_SPECTRAL[0])/1E6);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>BEAM_FREQUENCY_UNIT(</highlight><highlight class="stringliteral">&quot;Mhz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DYNSPEC_BANDWIDTH(NOF_SUBBANDS*SUBBAND_WIDTH);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Variable<sp/>iniatialization<sp/>for<sp/>POLARISATION<sp/>coordinate<sp/><sp/>group<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>GROUPE_TYPE_POL(</highlight><highlight class="stringliteral">&quot;PolarizationCoord&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>COORDINATE_TYPE_POL(</highlight><highlight class="stringliteral">&quot;Polarization&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>STORAGE_TYPE_POL(1);STORAGE_TYPE_POL[0]=</highlight><highlight class="stringliteral">&quot;Tabular&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NOF_AXES_POL(obsNofStockes);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>AXIS_NAMES_POL(stokesComponent);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>AXIS_UNIT_POL(obsNofStockes);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o=0;o&lt;obsNofStockes;o++){AXIS_UNIT_POL[o]=</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;}<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>META-DATA<sp/>for<sp/>Event<sp/>Group<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>GROUPE_TYPE_EVENT(</highlight><highlight class="stringliteral">&quot;Event&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>DATASET_EVENT(</highlight><highlight class="stringliteral">&quot;Event<sp/>List&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_AXIS_EVENT(2);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>N_AXIS_1_EVENT(</highlight><highlight class="stringliteral">&quot;Fields&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>N_AXIS_2_EVENT(</highlight><highlight class="stringliteral">&quot;Event&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_EVENT(1);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>FIELD_1(N_EVENT);FIELD_1[0]=</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>FIELD_2(N_EVENT);FIELD_2[0]=</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>FIELD_3(N_EVENT);FIELD_3[0]=</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>FIELD_4(N_EVENT);FIELD_4[0]=</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>FIELD_5(N_EVENT);FIELD_5[0]=</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>FIELD_6(N_EVENT);FIELD_6[0]=</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>META-DATA<sp/>for<sp/>Process<sp/>HISTORY<sp/>GROUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>GROUPE_TYPE_PROCESS(</highlight><highlight class="stringliteral">&quot;ProcessHistory&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OBSERVATION_PARSET(0);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OBSERVATION_LOG(0);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DYNSPEC_PARSET(0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DYNSPEC_LOG(0);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>END<sp/>READING<sp/>DYNSPEC<sp/>META-DATA<sp/><sp/>//</highlight></codeline>
<codeline lineno="344"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Object<sp/>generation<sp/>=&gt;<sp/>STOCK<sp/>DYNSPEC<sp/>METADATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dynspecMetadata-&gt;<ref refid="class_stock___write___dynspec___metadata_1adbbba2a4b003e531f60dc4d7977f1a2b" kindref="member">stockDynspecMetadata</ref>(GROUPE_TYPE_DYN,DYNSPEC_START_MJD,DYNSPEC_STOP_MJD,DYNSPEC_START_UTC,DYNSPEC_STOP_UTC,DYNSPEC_BANDWIDTH,BEAM_DIAMETER,TRACKING,TARGET_DYN,<sp/><sp/></highlight><highlight class="comment">//attr_79</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ONOFF,POINT_RA,POINT_DEC,POSITION_OFFSET_RA,POSITION_OFFSET_DEC,BEAM_DIAMETER_RA,BEAM_DIAMETER_DEC,BEAM_FREQUENCY_MAX,BEAM_FREQUENCY_MIN,BEAM_FREQUENCY_CENTER,<sp/><sp/></highlight><highlight class="comment">//attr_89</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BEAM_FREQUENCY_UNIT,BEAM_NOF_STATIONS,BEAM_STATIONS_LIST,DEDISPERSION,DISPERSION_MEASURE,DISPERSION_MEASURE_UNIT,BARYCENTER,STOCKES_COMPONENT,COMPLEX_VOLTAGE,SIGNAL_SUM,<sp/><sp/></highlight><highlight class="comment">//<sp/>attr_99</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GROUPE_TYPE_COORD,REF_LOCATION_VALUE,REF_LOCATION_UNIT,REF_LOCATION_FRAME,REF_TIME_VALUE,REF_TIME_UNIT,REF_TIME_FRAME,NOF_COORDINATES,NOF_AXIS,COORDINATE_TYPES,<sp/><sp/></highlight><highlight class="comment">//<sp/>attr_109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GROUPE_TYPE_TIME,COORDINATE_TYPE_TIME,STORAGE_TYPE_TIME,<sp/>NOF_AXES_TIME,AXIS_NAMES_TIME,AXIS_UNIT_TIME,REFERENCE_VALUE_TIME,REFERENCE_PIXEL_TIME,INCREMENT_TIME,<sp/><sp/></highlight><highlight class="comment">//<sp/>attr_118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PC_TIME,GROUPE_TYPE_SPECTRAL,COORDINATE_TYPE_SPECTRAL,STORAGE_TYPE_SPECTRAL,NOF_AXES_SPECTRAL,AXIS_NAMES_SPECTRAL,<sp/><sp/></highlight><highlight class="comment">//<sp/>attr_127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AXIS_UNIT_SPECTRAL,REFERENCE_VALUE_SPECTRAL,REFERENCE_PIXEL_SPECTRAL,INCREMENT_SPECTRAL,PC_SPECTRAL,AXIS_VALUE_WORLD_SPECTRAL,AXIS_VALUE_PIXEL_SPECTRAL,<sp/><sp/></highlight><highlight class="comment">//<sp/>attr_135</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GROUPE_TYPE_POL,COORDINATE_TYPE_POL,STORAGE_TYPE_POL,NOF_AXES_POL,AXIS_NAMES_POL,AXIS_UNIT_POL,Ntime,Nspectral,GROUPE_TYPE_EVENT,DATASET_EVENT,N_AXIS_EVENT,N_AXIS_1_EVENT,<sp/><sp/></highlight><highlight class="comment">//<sp/>attr_150</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_AXIS_2_EVENT,N_EVENT,FIELD_1,FIELD_2,FIELD_3,FIELD_4,FIELD_5,FIELD_6,GROUPE_TYPE_PROCESS,OBSERVATION_PARSET,OBSERVATION_LOG,DYNSPEC_PARSET,DYNSPEC_LOG);<sp/><sp/></highlight><highlight class="comment">//<sp/>attr_163</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dynspecData-&gt;<ref refid="class_stock___write___dynspec___data_1a0917bd4e0368e064176758b23004dea1" kindref="member">stockDynspecData</ref>(Ntime,Nspectral);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Memory<sp/>desallocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>NUM_COORD_TIME;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>DIR_COORD_TIME;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>NUM_COORD_SPECTRAL;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>DIR_COORD_SPECTRAL;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>the<sp/>Reader_Dynspec<sp/>object<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>empty<sp/>BEAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="/home/vilchez/Bureau/dynspec/src/ICD3-ICD6-Complete/Reader_Dynspec.cpp"/>
  </compounddef>
</doxygen>
