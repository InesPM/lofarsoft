#! /bin/bash
# first run makeparadefine and then edit if necessary 
# and then run makeqcparadefine and edit if necc.

echo ' '
echo ' Setting up qcparadefine file ... '
printf ' %s\n Use the (f)ile qc_asrl_list or create (n)ew one ? '
read ch1

if [ $ch1 != "n" ] && [ $ch1 != "f" ] ; then
 export ch1='f'
fi

# set up env variables from paradefine
export file='paradefine'
exec 3<&0
exec 0<$file
while read line
do
 f1=$(echo $line | awk '{ print $1 }')
 f3=$(echo $line | awk '{ print $3 }' | sed "s/'//"g)
 export $(echo $f1)=$(echo $f3)
done
exec 0<&3

# list gaul files for user to edit
if [ $ch1 = "n" ] ; then
 echo ' Edit the following file to include what you need'
 echo ' Second field is zero => association radius (asec) is beam/2'
 echo ' Third field is m/s => is master/slave list, other=m'
 export ppwd=$PWD
 cd $srldir; ls *.gaul | sed 's/\.gaul/ 0 m/' > $scratch/qc_asrl_list 
 gvim $scratch/qc_asrl_list 
 cd $ppwd
else
 echo ' Using old qc_asrl_list'
fi

printf ' %s\n Proceed ? '
read
export num_asrl=$(wc -l $scratch/qc_asrl_list | awk '{print $1}')
echo 'num_asrl = ' $num_asrl ' ; number of .gaul files to associate with' >> qcparadefine

# make a file with variables to plot
if [ $num_asrl -gt 0 ] ; then
 printf ' %s\n Use the (f)ile qc_pasl_opts or create (n)ew one ? '
 read ch1
 if [ $ch1 != "n" ] && [ $ch1 != "f" ] ; then
  export ch1='f'
 fi
 if [ $ch1 = "n" ] ; then
  echo ' Edit the following file to include what you need'
  echo ' First member of pair is of master source list and '
  echo ' second member is of the slave. Applies to all asrl.'
  echo ' '
  export ppwd=$PWD
  cd $ppwd
  make_init_paslopts $scratch/qc_pasl_opts
  cd $scratch; gvim $scratch/qc_pasl_opts 
 else
  echo ' Using old qc_pasl_opts'
 fi
fi
echo ' '

exit 0



