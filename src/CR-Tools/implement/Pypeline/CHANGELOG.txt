2010-06-07 - Heino Falcke  - rev 5064:
- added global function trackHistory(bool) - to switch history
tracking in arrays on or off

2010-06-07 - Heino Falcke  - rev 5057:
- changed downsample routines to work with fractional block sizes
- changed RFI routines to check for too large number of bins (so
smaller blocksizes will also work)

2010-06-01:
- added convenience function hInvFFTwSave to do a save fft (hftools.cc, testcr2.py)
- added hMinPos, hMaxPos - returning position of maxium or minimum (hftools.cc,testcr2.py)
- added calculation of time delays with cross-correlation from CR data (testcr2.py)
- remaining: some not-understood behaviour of invfftw

2010-08-25 - Heino Falcke:
- changed hFileRead to accept iterate input and hence to read data
into the array starting at any location

2010-08-26 - Heino Falcke - rev 5751:
- added hMulAdd2 which will loop over the second rather than the 1st
parameter in looping mode

2010-08-26 - Heino Falcke - rev 5765:
- added hFlip to reverse the order of elements in a vector

2010-08-26 - Sander ter Veen - rev 5836 +
- Corrected hMulAdd2
- Added IO and calibration module
- Added pipeline_start.py script for the first basic steps using these
modules

2010-11-03 - Heino Falcke - rev 6228
- Added hTranspose - to transpose a vector on the c++ level
- adapted hArray_tranpose to use hTranspose with hArrays
- Added Functions hDiffSum and hDiffSquaredSum to caluclate the (sum
of the (squared)) differences of two vectors
- changed hFill to allow filling one vector with a second vector of
different type
- hArrays can now be created with a copy from another vector of
different type (use the "copy=other_array"  or  "fill=other_array" keywords)
- added hDoubleFFT, hDoubleFFTPhase, hDoubleFFTPhaseMul to do a double
FFT based on Arthur's numpy example
- testDoubleFFT.py shows an example testing the douple FFT
- created a separate plot.py module in core, as this was not working
properly in the new structure
- moved the list of hftools function to be added as methods to harrays
and vectors to  type.py

2010-11-04: Pypeline - Heino Falcke - rev 6230
- Interchanged the arguments blocklen and nblocks for doubleFFT to be
in the same order as used for defining the corresponding matrix
- added  hChiSquared and hMeanChiSquared functions

2010-11-04: Pypeline - Heino Falcke - rev 6231
- changed the .read method to allow providing a block or even a list
of block numbers that are to be read sequentially into a matrix
- .read can now also read into array of different type (e.g. read Fx
data into complex arrays right away)
- fixed bugs that became obvious when running the tutorial (which is
slightly updated - figureless version only)
- deleted some unnecessary error messages in the hftools (if it
doesn't crash or hang it is not an error but a feature ...!)
- updated the preprocessor and added a keyword
HFPP_PAR_IS_UNMUTABLE_SCALAR in the wrapper definition which  ensures
that a parameter is not turned into a vector when called in looping mode

2010-11-05 - Martin van den Akker
- Module gets rebuild if *any* of the header files changes.

2010-11-08: Pypeline - Heino Falcke - rev 6257
- .read method allows so specify a block AND a single antenna
selection
- changed DoubleFFT to allow for blocks to be stored on disk (example
not yet finished!)
- several bug fixes
- got testrfi3.py to work again (testrfi2.py doesn't)
- reinserted import plot
-- modified readdump to allow reading in a chunk of data only

2010-11-08: Pypeline - Heino Falcke - rev 6257
++ modified readdump to allow reading in a chunk of data only (already
in revision 6257)

2010-11-15 - Pypeline - Sander ter Veen - rev 6304
- Added "AntennaPositions" keyword to IO.py. This gives the antennapositions in the local coordinate relative to the CS002 core.

2010-11-17: Pypeline - Heino Falcke - rev 6332
- modified preprocessor to produce forward declarations of functions
(this assumes all non pass-as-reference parameters are defined as
constant), this should allow moving fucntions from .h file back to the
.cc file
- removed the obsolete SLICED types from hfppnew.h
- deleted a number of warnings in mMath
- fixed a few bugs here and there (e.g., inconsistent hApplyFilter declaration)
- introduced HFPP_FUNC_IS_INLINE to indicate that a function is
defined as inline
- introduced HFPP_CLASS_STDIT as a type of Wrapper to be
genenerated. This is used for forward declarations and essentially now
assumes that by default all vector functions are defined using
templated iterators (which they de facto already are by convention so
far)

2010-11-17: Pypeline - Heino Falcke - rev 6340
- found a number of bugs
- added short doc string to python wrapper
- rearranged some parts of the software (moving code from .h to .cc
files)
-added testseti7.py

2010-11-22: Pypeline - Heino Falcke - rev 6350
- Added function hFindSequenceGreaterThan etc. to find sequences of
data that is above (or below) a certain value - useful for identifying
peaks in the data
- Added documentation about hFindSequence to tutorial
- Fixed a few inconsistencies in hFileRead to now allow using looping
- fixed bugs in the tutorial (no idea how they got there)
- hArray.plot() now also passes normal scipy plotting keywords to
plt.plot() like color="red"
- added philosophy and history of pycrtool presentation to doc directory for reading


2010-11-22: Pypeline - Heino Falcke - rev 6442
- work around so that the data reader works again and can read fx with selected antennas
- removed a bug in hMul2 that came in due to an accidentaly copied line
- added Pymacs to the extras, which allows one to run Python under (aqua)emacs with tab completion (etc)
- start to add highlighting to plot (not yet tested)

2010-12-03 Pypeline - Martin van den Akker
- Removed "using namespace" from headers.
- Added stringToUpper and stringToLower methods to core functionality.

2010-12-14 Pypeline - Martin van den Akker
- Added writeRaw and readRaw method for hArrays
  These create a raw string which is a memcopy of the data in the (flat) hArray vector. This can be used to write and read hArray data with pickle in Python.

2010-12-22 Pypeline - Martin van den Akker
- Added support for AERA datareader

2011-01-26 Pypeline - rev 6832 - Heino Falcke
- Added hReadTextTable to read data from a textfile
- added hSplitString (not in Python) to split a string into words.

2011-01-27 Pypeline - rev 6860 - Heino Falcke
- Added hWriteTextTable to write data to a textfile
- changed parameters in hReadTextTable

2011-02-01 Pypeline - rev 6914 - Heino Falcke
- Renamed Write/ReadDump to Write/ReadFileBinary Renamed
- Write/ReadTextTable to Write/ReadFileText Added
- WriteFileBinaryAppend to append a block of data 
- Write/ReadFileBinary have a changed parameter "start" rather than
  "block", which allows one to specify the starting position in units 
  of the elements in the vector rather than in unist of the vector
  size. This allows simple random access read and write.

2011-02-03 Pypeline - rev 6952 - Heino Falcke 
- added hArrayRead, hArray_write, and hArray_writeheader this allows
one to write an hArray with a header file (filename.hdr) to disk that
contains dimensions and other info. It can be read in with
hArrayRead()

2011-02-03 Pypeline - rev 6957 - Heino Falcke 
- added error messages to read/write functions in mIO.cc
- fixed a bug in hWriteFileBinary which would not write a block if the file
did not exist yet
- hArrays now contain a header dict, which can be assigned at creation
or is inherited upon reading from a datafile and can be extended at will
- the header information is stored with hArray_writeheader etc. (and retrieved)

2011-02-03 Pypeline - rev 6977 - Heino Falcke 
- minor bug fixes, writeheader (take sliced arrays into account, allow
specifying dimensions explicitly)
- updated and tested stationspectrum



------------------------------------------------------------------------
TODO
------------------------------------------------------------------------
- indexing an hArray with a list does not work anymore
- add highlighting of subsections to .ploty (see testseti7.py)
