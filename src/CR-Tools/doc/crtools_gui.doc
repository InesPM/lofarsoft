/* $Id$ */

/*!
  \defgroup CR_GUI CR-Tools :: Graphical user-interface module
  \ingroup CR
  \brief The basic data get/put mechanism for the Plotting Tool for LOFAR Data

  <hr>
  
  \section CR_GUI_requirements Requirements
  
  - QT installiert von source
  - <a href="http://www.riverbankcomputing.co.uk/software/sip/download">SIP</a> installiert von Source
  - Python 2.6 installiert als Mac OS binary installer von python.org
  - python 2.6 installiert von source von python.org 
  - PyQt von source
  - MathGl von source
  - DOT ... (http://www.graphviz.org/)

  In the end it worked and I didn't know why. I guess the point is that
  PyQt needs to be built by the packaged python while Mathgl needs to be
  build by the self-built python and using gcc4.3. It may also matter in
  which order this is done ...

  <hr>

  <b>Note:</b> This module is optional and -- at least for the moment -- not
  included in the default build of the CR-Tools software package; since the code
  within this module is highly experimental and still subject to the design 
  process it has to be enabled explicitelty by adding
  \verbatim
  -DCR_WITH_GUI:BOOL=TRUE
  \endverbatim
  to the list of CMake configuration parameters.
  
  <h3>Usage</h3>

  In order to use the generated shared object library in Python run
  \verbatim
  python 
  from libhfget import *
  \endverbatim
  Once you have done this you can make use of the actual functionaly provided 
  by the module:
  \verbatim
  d=Data("LOFAR")
  d.printStatus(1)
  v=d.newObjects("Header")
  d2=d.ObjectID(v[0])
  v=d.newObjects("Header:X")
  len(v)
  d.printDecendants("")
  DIR.TO+1
  
  v2=IntVec()
  v[:]=[0,1,2,3,4,5,6,7]
  v[3:4]=[8,9]
  \endverbatim
*/
