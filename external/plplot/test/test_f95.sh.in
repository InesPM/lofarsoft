#!@SH_EXECUTABLE@
# Test suite for f95 examples.
#
# Copyright (C) 2004  Alan W. Irwin
# Copyright (C) 2004  Andrew Ross
#
# This file is part of PLplot.
#
# PLplot is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Library Public License as published
# by the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# PLplot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with PLplot; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

# This is called from plplot-test.sh with $f95dir, $device, $dsuffix,
# and $options defined.

# To build the f95 examples before running this script do the following:
# pushd $f95dir; make; popd

if test "yes@HAVE_F77PARSE_CL_TRUE@" = "yes"; then
# This stanza only works if fortran has command-line parsing capability.
# However, this is the preferred method because it allows access to
# command-line parsing of the $options (e.g., familying options for png
# and jpeg devices) that have been passed from plplot-test.sh

# Do non-standard example 16a because it illustrates plshade functionality
# with cmap1 (and also because the result looks nice.)
  $f95dir/x16af -dev $device -o ${OUTPUT_DIR}/x16af95.$dsuffix $options 2> test.error
  status_code=$?
  cat test.error
  if [ "$status_code" -ne 0 ]; then
    exit $status_code
  fi
  # Look for any PLPLOT ERROR messages from plwarn that do not result in an
  # exit code.
  is_error=`grep -l 'PLPLOT ERROR' test.error`
  if test -n "$is_error"; then
    exit 1
  fi


# Do the standard non-interactive examples.
# skip 14, 17, and 20 because they are interactive, and 20 not implemented.
# skip 21 because it delivers variable results depending on computer timing
# and load (and not implemented yet).
  for index in 01 02 03 04 05 06 07 08 09 10 11 12 13 15 16 18 19 22 23 28 29 30; do
    $f95dir/x${index}f -dev $device -o ${OUTPUT_DIR}/x${index}f95.$dsuffix $options 2> test.error
    status_code=$?
    cat test.error
    if [ "$status_code" -ne 0 ]; then
      exit $status_code
    fi
    # Look for any PLPLOT ERROR messages from plwarn that do not result in an
    # exit code.
    is_error=`grep -l 'PLPLOT ERROR' test.error`
    if test -n "$is_error"; then
      exit 1
    fi
  done
else
# Fall back to this method if this fortran platform does not have
# command-line parsing capability.  Command-line $options must be ignored
# for this method.
# Do non-standard example 16a because it illustrates plshade functionality
# with cmap1 (and also because the result looks nice.)
  $f95dir/x16af <<EOF 2> test.error
$device
${OUTPUT_DIR}/x16af95.$dsuffix
EOF
  status_code=$?
  cat test.error
  if [ "$status_code" -ne 0 ]; then
    exit $status_code
  fi
  # Look for any PLPLOT ERROR messages from plwarn that do not result in an
  # exit code.
  is_error=`grep -l 'PLPLOT ERROR' test.error`
  if test -n "$is_error"; then
    exit 1
  fi


# Do the standard non-interactive examples.
# skip 14, 17, and 20 because they are interactive, and 20 not implemented.
# skip 21 because it delivers variable results depending on computer timing
# and load (and not implemented yet).
  for index in 01 02 03 04 05 06 07 08 09 10 11 12 13 15 16 18 19 22 23 28 29 30; do
     $f95dir/x${index}f <<EOF 2> test.error
$device
${OUTPUT_DIR}/x${index}f95.$dsuffix
EOF
  status_code=$?
  cat test.error
  if [ "$status_code" -ne 0 ]; then
    exit $status_code
  fi
  # Look for any PLPLOT ERROR messages from plwarn that do not result in an
  # exit code.
  is_error=`grep -l 'PLPLOT ERROR' test.error`
  if test -n "$is_error"; then
    exit 1
  fi
  done
fi
