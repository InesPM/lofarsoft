PLplot Release 5.7.4
~~~~~~~~~~~~~~~~~~~~

This is a routine development release of PLplot. It represents the ongoing 
efforts of the community to improve the PLplot plotting package. Development 
releases in the 5.7.x series will be available every few months. The next 
stable release will be 5.8.0.

     If you encounter a problem that is not already documented in the
PROBLEMS file, then please send bug reports to PLplot developers via the
mailing lists at http://sourceforge.net/mail/?group_id=2915 .

     Please see the license under which this software is distributed
(LGPL), and the disclaimer of all warrantees, given in the COPYING.LIB
file.


INDEX

1. Changes relative to PLplot 5.7.3
  1.1 CVS to Subversion conversion
  1.2 Drivers
    1.2.1 xwinttf -> xcairo
  1.3 Ada bindings
  1.4 Python bindings
  1.5 Fortran95 Documentation
  
2. Changes relative to PLplot 5.6.1
  2.1 CVS to Subversion conversion
  2.2 CMake build system
  2.3 Plot Buffering
  2.4 Updated INSTALL/README
  2.5 malloc/calloc clean up
  2.6 Documentation
  2.7 Additions to the PLplot API
  2.8 Language bindings
    2.8.1 Experimental ADA language binding
    2.8.2 wxwidgets applications bindings
  2.9 Updated examples
  2.10 Drivers
    2.10.1 psttf
    2.10.2 svg
    2.10.3 wxwidgets
    2.10.4 pdf
    2.10.5 gd, wingcc (freetype)
    2.10.6 cairo
    2.10.7 pstex
  2.11 Python bindings
  2.12 Fortran95 Documentation


1. Changes relative to PLplot 5.7.3 (the previous development release)

1.1 CVS to Subversion conversion

   PLplot now uses the Subversion (svn) version control system. Records of
all the changes and release tags have been preserved from the CVS repository.

1.2 Drivers
   1.2.1 xwinttf -> xcairo
        The xwinttf driver has been renamed xcairo. In addition most of the
     the other output devices that Cairo supports are now supported. These
     include a postscript driver (pscairo), a PDF driver (pdfcairo), a
     SVG driver (svgcairo), a PNG driver (pngcairo) and a memory driver
     (memcairo). This driver is still considered experimental. Known issues 
     include improper text rendering with the SVG driver and the memory 
     driver does not work at all.

1.3 Ada bindings

    The ADA bindings are now considered complete and the current focus is on
implementing all of the examples in ADA.

1.4 Python bindings

    The Python bindings have been updated to use numpy rather than the now
deprecated Numeric python numeric library. If you need to revert to the old
Numeric support, then you should specify the cmake option -DHAVE_NUMPY=OFF.

1.5 Fortran95 documentation

    The Fortran95 documentation has been updated.


2. Changes relative to PLplot 5.6.1 (the previous stable release)

2.1 CVS to Subversion conversion

   PLplot now uses the Subversion (svn) version control system. Records of
all the changes and release tags have been preserved from the CVS repository.

2.2 CMake build system

   PLplot now uses the CMake build system (www.cmake.org) and the older
autotools build system has been deprecated. The switch to CMake was made due
its superior support for Windows platforms and its relative simplicity
compared to autotools. CMake 2.4.5 is the minimum required version of cmake.
Finding swig has been improved such that it should now be found as long as
it is in your path.

2.3 Plot Buffering

   PLplot core has been modified to buffer plot commands in memory rather than
via a unix pipe or temporary file. Testing has shown that there is 20-30%
improvement in plotting performance (i.e. speed). This is likely to be system
dependent and some may see a much larger benefit. This also resolves a problem 
with some windows platforms where the temporary files were not getting deleted.

2.4 Updated INSTALL/README

   The INSTALL and README files have been updated. They now include detailed
instructions for building plplot using the new CMake build system on linux
and windows.

2.5 malloc/calloc clean up

   Checks have been added to many (all?) of the calls to calloc and malloc in
the PLplot core. The purpose of the check is to verify that the memory 
requested was actually allocated prior to attempting to use it.

2.6 Documentation

   The API section has been expanded to include information about how to call
the functions from Fortran95, Java, Perl/PDL and Python. Since array dimension
information is typically redundant in these languages it is dropped in many
of the relevant function. Additionally, some of the Perl/PDL function calls 
have a different argument order than their C equivalent. This section has also 
been expanded to include a list of which examples each function is used in 
(if any).

2.7 Additions to the PLplot API

   The functions plptex3 and plmtex3 have been added to the PLplot API. These
allow the user to draw text in "3D" on the 3D plots. plptex3 is the 3D
equivalent of plptex and plmtex3 is the 3D equivalent of plmtex.
 
2.8 Language bindings
  2.8.1 ADA
       Jerry Bauck has donated bindings to the ADA programming language. 
    These are considered experimental in nature and the API is subject to
    change.  These bindings have been included into the CMake build system,
    and should be generated automatically if you have an ADA compiler and
    you specify the cmake option -DENABLE_ada=ON.  Four standard examples
    have been completed and work on a complete set of examples is ongoing.

  2.8.2 wxwidgets applications bindings
       The wxWidgets bindings provide an interface to the PLplot API and a 
    simple widget to be used in a wxWidgets application. The class 
    'wxPLplotstream' inherited from the PLplot class 'plstream' allows access
    to the complete PLplot API. 'wxPLplotWindow' is a simple wxWidget which
    takes care of some preparational work for convenient use of the PLplot
    Library within a wxWidgets application.
 
2.9 Updated examples

   The examples have been checked over to make sure that they all work
and to make them more consistent across different programming languages.   

2.10 Drivers
  2.10.1 psttf
    This device driver now requires LASi version 1.0.6 or 1.0.5pl.  See
    http://www.unifont.org/lasi/ for instructions (depending on installed
    version of FreeType library) on which to choose.

  2.10.2 svg
    This is a new device driver that creates Scalable Vector Graphics files 
    (http://www.w3.org/Graphics/SVG/). SVG is a XML language describing
    graphics that is supported directly or via plug-ins in most modern web
    browsers. The driver is off by default as its text handling has not been
    perfected.

  2.10.3 wxwidgets
    This driver has been updated a great deal. The most important improvements
    have been to the antializing part of the driver. It is now about 4 times
    faster than it was, and is nearly comparable in speed to the driver
    with the antializing turned off. In addition the antializing code can
    now handle filled polygons and window resizing.

  2.10.4 pdf
    A basic version of a pdf driver was added to the latest PLplot release. 
    This driver is based on the libharu library 
    (http://libharu.sourceforge.net/). At present only the hershey fonts are 
    used and there is no support for pdf or ttf fonts. Compression of the pdf 
    output is not enabled and the paper size can't be chosen. All these issues 
    will be addressed in later releases.

  2.10.5 gd, wingcc (freetype)
    Improved anti-aliasing routines have been added to plplot's freetype
    font rendering engine. The gd and wingcc drivers have been modified in 
    turn to take advantage of these new routines, leading to improved text
    rendering.

  2.10.6 cairo 
       This is a family of drivers that use the Cairo graphics library to
    render text and graphics. The graphics and the text are both
    anti-aliased. It is unicode enabled and Truetype fonts are used by 
    default. Most of the the output devices that Cairo supports are 
    supported. These include a X windows driver (xcairo), a postscript 
    driver (pscairo), a PDF driver (pdfcairo), a SVG driver (svgcairo), a 
    PNG driver (pngcairo) and a memory driver (memcairo). This driver is 
    still considered experimental. Known issues include improper text 
    rendering with the SVG driver and the memory driver does not work at 
    all.

  2.10.7 pstex driver
       This Latex driver has now been resurrected from years of neglect and
    aside from bounding box issues seems to be working well.  Should be
    useful for Latex enthusiasts.

1.4 Python bindings

    The Python bindings have been updated to use numpy rather than the now
deprecated Numeric python numeric library.

1.5 Fortran95 documentation

    The Fortran95 documentation has been updated.
