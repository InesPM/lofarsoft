
## Name of the project
project (CASACORE)

## Minimum required version of CMake to configure the project
cmake_minimum_required (VERSION 2.8)

## -----------------------------------------------------------------------------
## Only force rebuild of the library from the provided source code, if no system
## installation can be found. In order to handle this properly, we use the CMake
## find script

option (CASACORE_FORCE_BUILD       "Force rebuild and local installation?"       NO  )
option (CASACORE_CMAKE_BUILD       "Use CMake to configure and build CASACORE?"  YES )
option (CASACORE_VERBOSE_CONFIGURE "Be verbose during configuration?"            NO  )
option (CASACORE_VERBOSE_BUILD     "Be verbose during build process?"            NO  )

## ------------------------------------------------------------------------------
## Set CMAKE_MODULE_PATH to load custom CMake modules

find_path (LUS_ROOT devel_common/cmake/CMakeSettings.cmake
  PATHS 
  ${CASACORE_SOURCE_DIR}
  ${CASACORE_SOURCE_DIR}/..
  ${CASACORE_SOURCE_DIR}/../..
  ${CASACORE_SOURCE_DIR}/../../..
  $ENV{LOFARSOFT}
  )

if (LUS_ROOT)
  include (${LUS_ROOT}/devel_common/cmake/CMakeSettings.cmake)
else (LUS_ROOT)
  message (FATAL_ERROR "[CASACORE] Unable to locate additional CMake scripts!")
endif (LUS_ROOT)

## ------------------------------------------------------------------------------
## Check if the program/package/library is already available

set (CASACORE_FIND_QUIETLY YES)

include (FindCASACORE)

find_program (bunzip2_executable   bunzip2   PATHS ${bin_locations})
find_program (svn_executable       svn       PATHS ${bin_locations})
find_program (tar_executable       tar       PATHS ${bin_locations})
find_program (find_executable      find      PATHS ${bin_locations})
find_program (wget_executable      wget      PATHS ${bin_locations})

## <-- begin build condition --------------------------------------------------->

if (NOT HAVE_CASACORE OR CASACORE_FORCE_BUILD)
  
  find_file (have_casacore_tgz   casacore.tgz  ${CASACORE_SOURCE_DIR})
  find_file (have_casacore_cmake cmake.tgz     ${CASACORE_SOURCE_DIR})

  if (have_casacore_tgz)
    ExternalProject_Add (casacore
      PREFIX ${CASACORE_BINARY_DIR}
      DOWNLOAD_DIR ${CASACORE_BINARY_DIR}/download
      SOURCE_DIR ${CASACORE_BINARY_DIR}/source
      URL ${have_casacore_tgz}
      URL_MD5 b9205c8edec69b12685fd55084076986
      PATCH_COMMAND ${tar_executable} -xzf ${have_casacore_cmake}
      CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${USG_INSTALL_PREFIX}
      )
  else (have_casacore_tgz)
    ExternalProject_Add (casacore
      PREFIX ${CASACORE_BINARY_DIR}
      DOWNLOAD_DIR ${CASACORE_BINARY_DIR}/download
      SOURCE_DIR ${CASACORE_BINARY_DIR}/source
      URL http://casacore.googlecode.com/svn/trunk casacore
      PATCH_COMMAND ${tar_executable} -xzf ${have_casacore_cmake}
      CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${USG_INSTALL_PREFIX}
      )
  endif (have_casacore_tgz)
  
  ## <-- end build condition ----------------------------------------------------->
  
else (NOT HAVE_CASACORE OR CASACORE_FORCE_BUILD)
  add_custom_target (casacore
    WORKING_DIRECTORY ${CASACORE_BINARY_DIR}
    COMMENT "[CASACORE] Found system-wide installation; skipping rebuild!"
    )
endif (NOT HAVE_CASACORE OR CASACORE_FORCE_BUILD)

## ==============================================================================
##
##  Service targets
##
## ==============================================================================

## Update tar-archive from code repository _______

if (svn_executable AND tar_executable)
  add_custom_target (casacore_update_archive
    COMMAND rm -rf casacore
    COMMAND ${svn_executable} co http://casacore.googlecode.com/svn/trunk casacore
    COMMAND ${tar_executable} -cvzf casacore.tgz casacore --exclude .svn
    COMMAND rm -rf casacore
    WORKING_DIRECTORY ${CASACORE_SOURCE_DIR}
    COMMENT "Retrieving latest version of casacore source code ..."
    )
endif (svn_executable AND tar_executable)

## Create tar-archive with CMake scripts _________

if (tar_executable)
  add_custom_target (casacore_update_cmake
    COMMAND rm -rf ../cmake.tgz
    COMMAND ${tar_executable} -cvzf ../cmake.tgz . --exclude .svn
    WORKING_DIRECTORY ${CASACORE_SOURCE_DIR}/cmake
    COMMENT "Retrieving latest version of casacore source code ..."
    )
endif (tar_executable)

## Download and install Measures database ________

if (wget_executable AND bunzip2_executable AND tar_executable)
  add_custom_target (casacore_measures
    COMMAND ${wget_executable} ftp://ftp.atnf.csiro.au/pub/software/asap/data/asap_data.tar.bz2
    COMMAND ${bunzip2_executable} asap_data.tar.bz2
    COMMAND ${tar_executable} -xvf asap_data.tar
    COMMAND rm -rf ephemerides geodetic
    COMMAND mv data/* .
    COMMAND rm -rf asap_data.* data
    WORKING_DIRECTORY ${LUS_ROOT}/data
    COMMENT "Retrieving latest version of measures database ..."
    )
endif (wget_executable AND bunzip2_executable AND tar_executable)
