
## -----------------------------------------------------------------------------
## Create "config.h"
##
## When using the GNU Autotools this typically is created by configure from
## config.h.in - since we bypass this setup but the source code requires the
## settings, we need to create the file here.

set (wcslib_config ${wcslib_SOURCE_DIR}/C/config.h)

file (WRITE ${wcslib_config} "/* C/config.h  --  Generated by CMake. */\n\n")

## Check for CFITSIO ----------------------------

if (fitsio_h AND libcfitsio)
  file (APPEND ${wcslib_config} "\#define HAVE_CFITSIO 1\n\n")
endif (fitsio_h AND libcfitsio)

## Check for libm library -----------------------

if (libm)
  file (APPEND ${wcslib_config} "\#define HAVE_LIBM 1\n\n")
endif (libm)

## Check for <errno.h> --------------------------

find_path (HAVE_ERRNO_H errno.h ${include_locations})

if (HAVE_ERRNO_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <errno.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_ERRNO_H 1\n\n")
endif (HAVE_ERRNO_H)

## Check for <inttypes.h> -----------------------

find_path (HAVE_INTTYPES_H inttypes.h ${include_locations})

if (HAVE_INTTYPES_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <inttypes.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_INTTYPES_H 1\n\n")
endif (HAVE_INTTYPES_H)

## Check for <limits.h> -----------------------

find_path (HAVE_LIMITS_H limits.h ${include_locations})

if (HAVE_LIMITS_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <limits.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_LIMITS_H 1\n\n")
endif (HAVE_LIMITS_H)

## Check for <math.h> -----------------------

find_path (HAVE_MATH_H math.h ${include_locations})

if (HAVE_MATH_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <math.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_MATH_H 1\n\n")
endif (HAVE_MATH_H)

## Check for <memory.h> -----------------------

find_path (HAVE_MEMORY_H memory.h ${include_locations})

if (HAVE_MEMORY_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <memory.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_MEMORY_H 1\n\n")
endif (HAVE_MEMORY_H)

## Check for <stdint.h> -----------------------

find_path (HAVE_STDINT_H stdint.h ${include_locations})

if (HAVE_STDINT_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <stdint.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_STDINT_H 1\n\n")
endif (HAVE_STDINT_H)

## Check for <stdio.h> -----------------------

find_path (HAVE_STDIO_H stdio.h ${include_locations})

if (HAVE_STDIO_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <stdio.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_STDIO_H 1\n\n")
endif (HAVE_STDIO_H)

## Check for <stdlib.h> -----------------------

find_path (HAVE_STDLIB_H stdlib.h ${include_locations})

if (HAVE_STDLIB_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <stdlib.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_STDLIB_H 1\n\n")
endif (HAVE_STDLIB_H)

## Check for <strings.h> -----------------------

find_path (HAVE_STRINGS_H strings.h ${include_locations})

if (HAVE_STRINGS_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <strings.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_STRINGS_H 1\n\n")
endif (HAVE_STRINGS_H)

## Check for <string.h> -----------------------

find_path (HAVE_STRING_H string.h ${include_locations})

if (HAVE_STRING_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <string.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_STRING_H 1\n\n")
endif (HAVE_STRING_H)

## Check for <stat.h> -----------------------

find_path (HAVE_SYS_STAT_H stat.h
  PATHS ${include_locations}
  PATH_SUFFIXES sys
)

if (HAVE_SYS_STAT_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <stat.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_SYS_STAT_H 1\n\n")
endif (HAVE_SYS_STAT_H)

## Check for <types.h> --------------------------

find_path (HAVE_SYS_TYPES_H types.h
  PATHS ${include_locations}
  PATH_SUFFIXES sys
)

if (HAVE_SYS_TYPES_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <types.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_SYS_TYPES_H 1\n\n")
endif (HAVE_SYS_TYPES_H)

## Check for <unistd.h> -------------------------

find_path (HAVE_UNISTD_H unistd.h ${include_locations})

if (HAVE_UNISTD_H)
  file (APPEND ${wcslib_config} "/* Define to 1 if you have the <unistd.h> header file. */\n")
  file (APPEND ${wcslib_config} "\#define HAVE_UNISTD_H 1\n\n")
endif (HAVE_UNISTD_H)

## Check header files for functions -------------

check_function_exists (floor HAVE_FLOOR)
check_function_exists (memset HAVE_MEMSET)
check_function_exists (pow HAVE_POW)
check_function_exists (sqrt HAVE_SQRT)
check_function_exists (strchr HAVE_STRCHR)
check_function_exists (strstr HAVE_STRSTR)

file (APPEND ${wcslib_config} "/* Define to 1 if any of the following functions are defined. */\n")
file (APPEND ${wcslib_config} "\#define HAVE_FLOOR ${HAVE_FLOOR}\n")
file (APPEND ${wcslib_config} "\#define HAVE_MEMSET ${HAVE_MEMSET}\n")
file (APPEND ${wcslib_config} "\#define HAVE_POW ${HAVE_POW}\n")
file (APPEND ${wcslib_config} "\#define HAVE_SQRT ${HAVE_SQRT}\n")
file (APPEND ${wcslib_config} "\#define HAVE_STRCHR ${HAVE_STRCHR}\n")
file (APPEND ${wcslib_config} "\#define HAVE_STRSTR ${HAVE_STRSTR}\n")

## -----------------------------------------------------------------------------
## Sources and instructions to build the library

set (wcslib_sources 
  cel.c
  fitshdr.c
  lin.c
  log.c
  prj.c
  spc.c
  sph.c
  spx.c
  tab.c
  wcs.c
  wcsfix.c
  wcshdr.c
  wcspih.c
  wcstrig.c
  wcsulex.c
  wcsunits.c
  wcsutil.c
  wcsutrn.c
)

include_directories (
  .
  ..
  ../..
  ${wcslib_SOURCE_DIR}
  ${wcslib_SOURCE_DIR}/C
  ${wcslib_SOURCE_DIR}/C/test
  ${HAVE_LIMITS_H}
  ${HAVE_MATH_H}
  ${HAVE_STDLIB_H}
)

add_library (wcs ${wcslib_sources})
target_link_libraries (wcs ${libm})

## -----------------------------------------------------------------------------
## Installation

install (TARGETS wcs
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
  )

## -----------------------------------------------------------------------------
## Location of the test programs

subdirs (test)

## -----------------------------------------------------------------------------
## Book-keeping of some of the temporary variables

mark_as_advanced (
  # header files
  HAVE_ERRNO_H
  HAVE_INTTYPES_H
  HAVE_LIMITS_H
  HAVE_MATH_H
  HAVE_MEMORY_H
  HAVE_STDINT_H
  HAVE_STDIO_H
  HAVE_STDLIB_H
  HAVE_STRINGS_H
  HAVE_STRING_H
  HAVE_SYS_STAT_H
  HAVE_SYS_TYPES_H
  HAVE_UNISTD_H
  # functions defined in header files
  HAVE_FLOOR
  HAVE_MEMSET
  HAVE_POW
  HAVE_SQRT
  HAVE_STRCHR
  HAVE_STRSTR
)
